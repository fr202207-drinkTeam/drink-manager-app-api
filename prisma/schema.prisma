// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Questionnaire {
  id        Int      @id @default(autoincrement())
  name      String
  description String
  createdAt DateTime @default(now()) @map(name: "created_at")
  category  Int
  startDate DateTime
  endDate   DateTime
  author    Int
  Polleditems PolledItem[]
  @@map("Questionnaires")
}

model PolledItem {
  id Int  @id @default(autoincrement())
  itemId Int
  questionnairId Int
  Questionnaire Questionnaire @relation(fields: [questionnairId], references: [id], onDelete: Cascade)
  @@map("PolledItems")
}

model Poll {
  id Int  @id @default(autoincrement())
  questionnaireId Int
  userId Int
  result Int
  category Int
  createdAt DateTime @default(now()) @map(name: "created_at")
  @@map("Polls")
}

model User {
  id    Int     @id @default(autoincrement())
  firstName String @db.VarChar(10)
  lastName String @db.VarChar(10)
  email String @unique @db.VarChar(40)
  password String @db.VarChar(16)
  confirmPassword String @db.VarChar(16)
  isAdmin Boolean
  authId String
  @@map("Users")
}

model Item {
  id    Int     @id @default(autoincrement())
  name String  @unique @db.VarChar(18)
  description  String @db.VarChar(200)
  itemCategory Int
  createdAt DateTime  @default(now()) @map(name: "created_at")
  inTheOffice Boolean
  author Int
  pollItem Boolean
  isDiscontinued Boolean
  @@map("Items")
}

model Post {
  id    Int     @id @default(autoincrement())
  userId Int
  content String @db.VarChar(255)
  itemId Int
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  @@map("Posts")
}

model Comment {
  id    Int     @id @default(autoincrement())
  userId Int
  content String
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  postId Int
  @@map("Comments")
}

model Like {
  id    Int     @id @default(autoincrement())
  userId Int
  content String
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  postId Int
  @@map("Likes")
}

model StockHistory {
  id    Int     @id @default(autoincrement())
  itamId Int
  quantity Int
  createdAt DateTime  @default(now()) @map(name: "created_at")
  incOrDec Boolean
  stockAmount Int
  @@map("StockHistories")
}

model ItemCategory {
  id    Int     @id @default(autoincrement())
  name String
  @@map("ItemCategories")
}

model Image {
  id    Int     @id @default(autoincrement())
  itemOrPost String
  path String
  createdAt DateTime  @default(now()) @map(name: "created_at")
  @@map("Images")
}

model Banner {
  id    Int     @id @default(autoincrement())
  category Int
  image String
  createdAt DateTime  @default(now()) @map(name: "created_at")
  author Int
  @@map("Banners")
}

model Conntact {
  id    Int     @id @default(autoincrement())
  category String
  content String @db.VarChar(500)
  @@map("Contacts")
}
